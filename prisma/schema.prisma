// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//  Cada usuário pode criar várias promoções (1:N)
model User {
  id       String    @id @default(uuid())
  name     String    @db.VarChar(255)
  email    String    @unique @db.VarChar(255)
  password String
  role     String    @default("user")
  Product  Product[]
}

//Cada categoria pode conter várias promoções (1:N)
model Product {
  id          String    @id @default(uuid())
  title       String
  price       Float
  description String?
  image       String?
  publicId    String? 
  address     String?
  latitude    Float?
  longitude   Float?
  link        String?
  userId      String
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  categoryId  String
  category    Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
  expiresAt   DateTime
}

//Relacionada tanto ao User quanto à Category (N:N)
model Category {
  id      String    @id @default(uuid())
  name    String    @unique
  product Product[]
}
